install.packages('DSUR')
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('dplyr')
install.packages('devtools')
install.packages('RMySQL')
packages = c("shiny", "ggplot2", "hexbin", "dplyr", "httr", "jsonlite")
install.packages(packages, repos = "https://cran.rstudio.com/")
library(shiny)
runGitHub("ballr", "toddwschneider")
?sample
sample(1:10, 5, replace = FALSE)
x <- 1:100
n <- 10
inds <- vector('list', n)
cv <- rep(0, length(x))
for (i in 1:n) {
inds[[i]] < - sample(x[!(x %in% cv)], n, replace = FALSE)
}
inds
debugonce(cvind)
inds <- vector('list', n)
cv <- rep(0, length(x))
for (i in 1:n) {
inds[[i]] <- sample(x[!(x %in% cv)], n, replace = FALSE)
}
inds
inds <- vector('list', n)
cv <- rep(0, length(x))
for (i in 1:n) {
inds[[i]] <- sample(x[!(x %in% cv)], n, replace = FALSE)
cv <- inds[[i]]
}
inds
df <- data.frame(x = rnorm(100), y = rnorm(100), z = rnorm(100))
folds <- lapply(inds, function(x) df[x, ])
folds[[1]]
inds[[1]]
?caret::createFolds
install.packages('caret')
?caret::createFolds
test <- createFolds(df$z, k = 10)
library(caret)
test <- createFolds(df$z, k = 10)
test
View(df)
test <- createFolds(df$z, k = 10)
folds <- lapply(test, function(x) df[x, ])
folds[[1]]
folds[1]
class(folds[[1]])
class(folds[1])
names(folds) <- paste('Group', 1:10)
folds$`Group 1`
as.formula('x ~ y + z')
?naiveBaye
?naiveBayes
?e1071::naiveBayes
?performance
?accuracy
?ROCR::performance
?caret::confusionMatrix
rm(list = ls())
sqrt(1.7/2)^2
sqrt(1.7^2/2)^2
sqrt(1.7^2/2)
sqrt(1.8^2/2)
1.8^2/2
a <- 7.55 / 1.62
b <- 26.25 / (5.44 * 2.64)
3.5^2/2
(320 * 480)3.5^2/2
(320 * 480) / (3.5^2/2)
(240 * 320) / (2.4^2 / 2)
(128 * 160) / (1.77^2 / 2)
(11.89 / 2) / (2.4^2 / 2)
(8.66 / 2) / (1.77^2 / 2)
(14.86 / 2) / (4.3^2 / 2)
(480 * 272) / (4.3^2 / 2)
rm(list = ls())
dims <- c(4.3, 3.5, 2.4 1.77)
dims <- c(4.3, 3.5, 2.4, 1.77)
costs <- (14.86, 18.29, 11.89, 8.66) / 2
costs <- c(14.86, 18.29, 11.89, 8.66) / 2
pixels <- (480 * 272, 320 * 480, 240*320, 128*160)
pixels <- c(480 * 272, 320 * 480, 240*320, 128*160)
areas <- dims^2 / 2
areas <- (dims / 2) ^ 2
ppii <- pixels / areas
areas <- dims^2 / 2
ppii <- pixels / areas
library(ggplot2)
df <- data.frame(areas = areas, costs = costs, dims = dims, pixels = pixels, ppii = ppii)
View(df)
df$ind <- 1:nrow(df)
ggplot(df, aes(x = ind)) + geom_point(aes(y = areas))
ggplot(df, aes(x = ind)) + facet_grid()
df
ggplot(df, aes(x = ind)) + geom_point(aes(y = costs))
ggplot(df, aes(x = ind)) + geom_point(aes(y = pixels))
df$cpii <- costs / areas
df$cpppii <- costs / pixels
df
cor(df$costs, df$cpii)
cor(df$costs, df$cpppii)
cor(df$costs, df$areas)
cor(df$costs, df$pixels)
ggplot(df, aes(x = areas, y  = costs))
ggplot(df, aes(x = areas, y  = costs)) + geom_point()
ggplot(df, aes(x = pixels, y  = costs)) + geom_point()
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
a <- ggplot(df, aes(x = areas, y  = costs)) + geom_point()
b <- ggplot(df, aes(x = pixels, y  = costs)) + geom_point()
multiplot(a, b, cols = 1)
b <- ggplot(df, aes(x = costs, y  = pixels)) + geom_point()
a <- ggplot(df, aes(x = costs, y  = areas)) + geom_point()
multiplot(a, b, cols = 1)
ggplot(df, aes(x = pixels, y = areas)) + geom_point()
(costs / ppii) / areas
mean((costs / ppii) / areas))
mean((costs / ppii) / areas)
1920 * 1080
1920 * 1080 - mean(pixels)
1920 * 1080 - mean(pixels) * .0001013
(1920 * 1080 - mean(pixels)) * .0001013
2560 * 1440 - 1980 * 1020
(2560 * 1440 - 1980 * 1020) * .0001
costs / areas
mean(c(10200, 6000, 1200, 22400) / c(70, 29.95, 34.95, 50))
mean(c(70, 29.95, 34.95, 50)/c(10200, 6000, 1200, 22400))
rm(list = ls())
q()
percs <- c(.98, .02, .97, .03, .99, .01)
country <- c(''USA', 'USA', 'CHINA', 'CHINA', 'INDIA', 'INDIA'')
country <- c('USA', 'USA', 'CHINA', 'CHINA', 'INDIA', 'INDIA'')
country <- c('USA', 'USA', 'CHINA', 'CHINA', 'INDIA', 'INDIA')
yes <- c('yes', 'no', 'yes', 'no', 'yes', 'no')
df <- data.frame(country =country, percs = percs, yes = yes)
library(ggplot)
library(ggplot2)
p <- ggplot(df, aes(x = factor(1), y = percs, fill = factor(yes)))
p
p <- p + geom_bar(width = 1)
p
p + geom_bar()
sapply(df, class)
ggplot(df, aes(x = country, y = percs)) + geom_bar()
ggplot(df, aes(x = country, y = percs)) + geom_point()
ggplot(df, aes(x = country, y = percs, group = yes)) + geom_point()
ggplot(df, aes(x = country, y = percs)) + geom_point(group = yes)
p <- ggplot(df, aes(x = factor(1), y = percs, fill = factor(yes)),)
p + geom_bar(width = 1)
ggplot(df, aes(x='', y = yes, fill = country)) + geom_bar(width = 1, stat = 'identity')
ggplot(df, aes(x='', y = yes, fill = country)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0)
ggplot(df, aes(x='', y = yes, fill = country)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
ggplot(df, aes(x='', y = yes, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
rm(yes, percs, country)
ggplot(df, aes(x='', y = yes, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
df
ggplot(df, aes(x='', y = yes, fill = percs)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
ggplot(df, aes(x='', y = yes, fill = percs)) + geom_bar(width = 1, stat = 'value') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
ggplot(df, aes(x='', y = yes, fill = percs)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
df$percs <- c(98, 2, 97, 3, 99, 1)
ggplot(df, aes(x='', y = yes, fill = percs)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
df
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country)
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme(legend.position = 'none')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme(legend.position = 'none', panel.background = 'white')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme(legend.position = 'none', panel.background = element_rect(colour = 'white'))
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme(legend.position = 'none') + theme_bw()
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw(legend.position = 'none')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none') + xlab('') + ylab('')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none') + xlab('') + ylab('')
?coord_polar
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none') + xlab('') + ylab('')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity', colour = 'red') + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none') + xlab('') + ylab('')
ggplot(df, aes(x='', y = percs, fill = yes)) + geom_bar(width = 1, stat = 'identity', aes(colour = 'red')) + coord_polar('y', start = 0) + facet_grid(facets = . ~ country) + theme_bw() + theme(legend.position = 'none') + xlab('') + ylab('')
library(ggplot2)
df <- dataframe(year = 2015:2021, `Total Mobil Phone Shipments (Millions)` = c(1432.9, 1435, 1579, 1873,1862,1920.4, 2001))
df <- dat.frame(year = 2015:2021, `Total Mobil Phone Shipments (Millions)` = c(1432.9, 1435, 1579, 1873,1862,1920.4, 2001))
df <- data.frame(year = 2015:2021, `Total Mobil Phone Shipments (Millions)` = c(1432.9, 1435, 1579, 1873,1862,1920.4, 2001))
ggplot(df, aes(x = year, y = `Total Mobil Phone Shipments (Millions)`)) + geom_bar()
names(df)
df <- dat.frame(Year = 2015:2021, Shipments = c(1432.9, 1435, 1579, 1873,1862,1920.4, 2001))
df <- data.frame(Year = 2015:2021, Shipments = c(1432.9, 1435, 1579, 1873,1862,1920.4, 2001))
ggplot(df, aes(x = year, y = `Total Mobil Phone Shipments (Millions)`)) + geom_bar()
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar()
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(label = Shipments))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity') + geom_text(aes(label = Shipments)
)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity') + geom_text(aes(label = Shipments), vjust = -.25)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity') + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(labels = 2015:2021)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none', axis.text.x = 2015:2021)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none', axis.text.x = element_text(2015:2021))
df
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme(legend.position = 'none')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none')
df$Year <- as.factor(df$Year)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'red')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8b0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = #8b0000)) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
)
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(colour = '#8b0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8B0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021))
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8B0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + theme(legend.position = 'none') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme_bw()
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8B0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme_bw() + theme(legend.position = 'none')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8B0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('Total Mobile Phone Shipments (Millions)') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme_bw() + theme(legend.position = 'none') + ggtitle('Total Mobile Phone Shipment Projections (Millions)')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = '#8B0000')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('') + xlab('') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme_bw() + theme(legend.position = 'none')
ggplot(df, aes(x = Year, y = Shipments)) + geom_bar(stat = 'identity', aes(fill = 'blue')) + geom_text(aes(label = Shipments), vjust = -.25) + ylab('') + xlab('') + scale_x_discrete(breaks = 2015:2021, labels = as.character(2015:2021)) + theme_bw() + theme(legend.position = 'none')
rm(list = ls())
q()
setwd('~/kaggle/kobe')
list.files()
df <- read.csv('data.csv', stringsAsFactors = FALSE, strip.white = TRUE)
View(df)
range(df$game_date)
library(ggplot2)
library(dplyr)
rm(list  = ls())
install.packages('installr')
library(installr)
installr::updateR()
